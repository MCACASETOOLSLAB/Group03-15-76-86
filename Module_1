// Module 1 of sleeping-Barber Problem
#include<stdio.h>
#include<conio.h>
#include <time.h>

#define total_no_of_sits 5;
int status,waiting_cust;
time_t current_time,start_time;

int check_sits_avail();
void check_barber_status();
void cust_comes();

main()
{
    waiting_cust=0;
    cust_comes();
    check_barber_status(ctime(&start_time),ctime(&current_time));
    
    getch();
}

void cust_comes()
{
    int sits_availble=0;
    sits_availble=check_sits_avail();
   if(sits_availble<=0)
   {
      printf(" Customer Must have to go back to his home");
      return;
    }   
    
    
   if(sits_availble==5)
   {
     printf(" \n\t WAIT...... \n\t Customer is going to awake barber");
     sleep(1000);
     printf("\n\t Barber Has come to his work");
     waiting_cust=5-sits_availble+1;
     printf("\n\t Customer has to wait for %d Customer in Queue ",(waiting_cust-1)*5);
   }
   else
   {
     waiting_cust=5-sits_availble+1;
     printf("\n\t Customer has to wait for %d customer in Queue ",(waiting_cust-1)*5);
     
   }    
}


int check_sits_avail(char *start_time_string, char *current_time_string)
{  
      int sits_available=0;
     
      sits_available=5-waiting_cust;
     if(sits_available<=5)
        return sits_available;
        
    return 5;
}


void check_barber_status()
{  
      int start_time_int,current_time_int;
      int sits_available=5-waiting_cust;
    
  if(sits_available>5)
     printf("\n\t Barber is sleeping.... \n\t There is no customer in the Queue");    
    
  if(sits_available==4)
     printf("\n\t Barber is working for Last Customer.... \n\t Barber will be going to sleep after finishing this customer \n\t There is no customer in the Queue");

  if(sits_available>=1 && sits_available<4)
     printf("\n\t Barber is working for %d Customer.... \n\t There is/are %d customer(s) in the Queue ",5-(int)sits_available,4-(int)sits_available);

}    
